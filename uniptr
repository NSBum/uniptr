#!/opt/homebrew/bin/bash

set -o errexit
set -o nounset


VERSION=1.01

version() {
   echo "uniptr: version ${VERSION}"
   exit -1
}

usage() {
   echo "uniptr"
   echo "------"
   echo "Unicode and UTF-8 printer"
   echo "Print Unicode code points and UTF-8 sequences in text"
   echo ""
   echo "Dependencies:"
   echo "   ucpt - see https://github.com/NSBum/ucpt"
   echo ""
   echo "Usage examples:"
   echo "   echo \"私の犬にはノミがいます。\" | uniptr"
   echo "   uniptr \"Это моя собака.\""
   exit -1
}

# prints the hex code for Unicode
# code point for a character
upt() {   
   if [ "$1" = " " ]; then
      echo "U+20"
   else
      echo "$1"
      ucpt "$1"
   fi
}
export -f upt

# prints the UTF-8 code for a character
utfer() {
   echo -n "$1" | xxd \
      | perl -pe 's/.+\:\s+([A-Fa-f0-9\s]+[^\s])\s{3,}.+$/$1/gm;' \
      | sed 's/ //g' \
      | fold -w2 \
      | tr '\n' ' ' \
      | sed 's/ 0a//g' \
      | sed 's/^ +(.+)//g'
}
export -f utfer

if ! which ucpt > /dev/null; then
   echo "ERR: ucpt required"
   usage
fi

# Function to compare versions
version_ge() {
   test "$(printf '%s\n' "$@" | sort -V | head -n 1)" != "$1";
}

# Minimum required version
MIN_VERSION="4.2"

# Check if the current version of Bash is less than the required version
if version_ge "$MIN_VERSION" "$BASH_VERSION"; then
   echo "This script requires Bash version $MIN_VERSION or greater."
   exit 1
fi

while getopts 'hv' OPT; do
   case $OPT in
      h) usage;;
      v) version;;
      ?) usage;;
   esac
done

shift $(( OPTIND - 1 )) 
if [ $# -eq 0 ]; then
   # no argument provided, look for stdin
   if [ -t 0 ]; then
      echo "ERR: nothing to check"
      usage
   else
      read text
   fi
else
   # there is a parameter, so use it
   text="$*"
fi

printf "%-7s\t| %-10s\t| %-10s\n" "char" "Unicode" "UTF-8"
printf "%s\n" "--------|---------------|----------"
while IFS= read -rn1 char; do
   # stop if we're done
   [ -z "$char" ] && break
   # shortcut to deal with space character
   if [ "$char" = " " ]; then
      unipoint="U+20"
      utf="20"
   else
#     echo "$char"
#     unipoint="U+xxxx"
      unipoint=$(ucpt "$char")
      utf=$(echo -n "$char" | xargs -I {} bash -c 'utfer "$@"' _ {})
   fi
   printf "%-7s\t| %-10s\t| %-10s\n" "$char" "$unipoint" "$utf"
done <<< "$text"